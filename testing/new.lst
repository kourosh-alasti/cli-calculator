     1                                 %line 19+1 new.asm
     2                                 
     3                                 %line 27+1 new.asm
     4                                 
     5                                 %line 35+1 new.asm
     6                                 
     7                                 
     8                                 
     9                                 addition:
    10 00000000 01C8                    add eax, ecx
    11 00000002 E99D000000              jmp continue_prog
    12                                 
    13                                 subtraction:
    14 00000007 29C8                    sub eax, ecx
    15 00000009 E996000000              jmp continue_prog
    16                                 
    17                                 multiplication:
    18 0000000E F7E1                    mul ecx
    19 00000010 E98F000000              jmp continue_prog
    20                                 
    21                                 division:
    22 00000015 F7F1                    div ecx
    23 00000017 E988000000              jmp continue_prog
    24                                 
    25                                 
    26                                 [section .bss]
    27                                 
    28 00000000 <gap>                   buffer resq 100
    29                                 
    30 00000320 <gap>                   result resq 100
    31                                 
    32                                 
    33 00000640 00                      symbol_temp db 0
    34 00000641 00                      number_temp db 0
    35                                 
    36                                 [section .data]
    37                                 
    38                                  SYS_EXIT equ 60
    39                                  EXIT_SUCCESS equ 0
    40                                 
    41                                  ADD_OPER equ '+'
    42                                  SUB_OPER equ '-'
    43                                  MUL_OPER equ '*'
    44                                  DIV_OPER equ '/'
    45                                 
    46                                  ZERO equ 48
    47                                 
    48 00000000 30303030303030300A      ascii db "00000000", 10
    49                                 
    50                                 
    51 00000009 456E74657220616E20-     msg db "Enter an equation: "
    52 00000009 6571756174696F6E3A-
    53 00000009 20                 
    54                                  msglen equ $-msg
    55                                 
    56 0000001C 526573756C743A20        results db "Result: "
    57                                  resultslen equ $-results
    58                                 
    59                                 [section .text]
    60                                 [global _start]
    61                                 
    62                                 _start:
    63 0000001C 41B801000000            mov r8d, 1
    64                                 
    65                                 
    66                                 
    67                                 
    68                                 beginning:
    69 00000022 48C7C001000000          mov rax, 1
    70                                 %line 96+0 new.asm
    71 00000029 48C7C701000000          mov rdi, 1
    72 00000030 48C7C6[00000000]        mov rsi, msg
    73 00000037 48BA13000000000000-     mov rdx, msglen
    74 00000037 00                 
    75 00000041 0F05                    syscall
    76                                 %line 97+1 new.asm
    77 00000043 48C7C000000000          mov rax, 0
    78                                 %line 97+0 new.asm
    79 0000004A 48C7C700000000          mov rdi, 0
    80 00000051 48C7C6[00000000]        mov rsi, buffer
    81 00000058 48C7C264000000          mov rdx, 100
    82 0000005F 0F05                    syscall
    83                                 %line 98+1 new.asm
    84                                 
    85                                 check_input:
    86 00000061 0FB60425[00000000]      movzx eax, byte[buffer]
    87                                 
    88                                 
    89 00000069 41FFC0                  inc r8d
    90 0000006C 67458B88[00000000]      mov r9d, [buffer+r8d]
    91 00000074 41FFC0                  inc r8d
    92 00000077 67458B90[00000000]      mov r10d, [buffer+r8d]
    93                                 
    94                                 
    95                                 %line 108+0 new.asm
    96 0000007F 4489CB                  mov ebx, r9d
    97                                 
    98 00000082 4489D1                  mov ecx, r10d
    99                                 
   100 00000085 83FB2B                  cmp ebx, ADD_OPER
   101 00000088 0F846CFFFFFF            je addition
   102                                 
   103 0000008E 83FB2D                  cmp ebx, SUB_OPER
   104 00000091 0F846AFFFFFF            je subtraction
   105                                 
   106 00000097 83FB2A                  cmp ebx, MUL_OPER
   107 0000009A 0F8468FFFFFF            je multiplication
   108                                 
   109 000000A0 83FB2F                  cmp ebx, DIV_OPER
   110 000000A3 0F8466FFFFFF            je division
   111                                 %line 109+1 new.asm
   112                                 
   113                                 continue_prog:
   114                                 
   115                                 
   116 000000A9 890425[00000000]        mov [result], eax
   117                                 
   118 000000B0 48C7C001000000          mov rax, 1
   119                                 %line 115+0 new.asm
   120 000000B7 48C7C701000000          mov rdi, 1
   121 000000BE 48C7C6[00000000]        mov rsi, results
   122 000000C5 48BA08000000000000-     mov rdx, resultslen
   123 000000C5 00                 
   124 000000CF 0F05                    syscall
   125                                 %line 116+1 new.asm
   126 000000D1 48C7C001000000          mov rax, 1
   127                                 %line 116+0 new.asm
   128 000000D8 48C7C701000000          mov rdi, 1
   129 000000DF 48C7C6[00000000]        mov rsi, buffer
   130 000000E6 48C7C264000000          mov rdx, 100
   131 000000ED 0F05                    syscall
   132                                 %line 117+1 new.asm
   133                                 
   134 000000EF 4883C730                add rdi, ZERO
   135 000000F3 48893C25[00000000]      mov qword[buffer], rdi
   136 000000FB 48C7C001000000          mov rax, 1
   137                                 %line 120+0 new.asm
   138 00000102 48C7C701000000          mov rdi, 1
   139 00000109 48C7C6[00000000]        mov rsi, buffer
   140 00000110 48C7C264000000          mov rdx, 100
   141 00000117 0F05                    syscall
   142                                 %line 121+1 new.asm
   143                                 
   144                                 
   145                                 
   146                                 
   147                                 exit:
   148 00000119 48C7C03C000000          mov rax, SYS_EXIT
   149 00000120 48C7C700000000          mov rdi, EXIT_SUCCESS
   150 00000127 0F05                    syscall
   151                                 
